  version: 2.1

  orbs:
    #sonarcloud-dotnet: ksmc/sonarcloud-dotnet@0.0.9

  jobs:
    build:
      docker:
        - image: mcr.microsoft.com/dotnet/sdk:8.0
      steps:
        - checkout
        - run: dotnet tool install --global dotnet-sonarscanner --version 9.0.0
        - run: echo 'export PATH="$PATH:/root/.dotnet/tools"' >> $BASH_ENV
        #- run: echo "deb http://ftp.us.debian.org/debian stretch main contrib non-free" >> /etc/apt/sources.list
        - run: echo "deb http://ftp.debian.org/debian stable main contrib non-free" >> /etc/apt/sources.list
        - run: apt update
        - run: apt install -y unzip
        # Install JAVA 17
        - run: mkdir -p /usr/share/man/man1 # FIX https://github.com/geerlingguy/ansible-role-java/issues/64
        - run: apt install -y openjdk-17-jdk
        # BEGIN Dependencies for RocksDB
        - run: apt install -y libc6-dev libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev
        - run: apt install -y bzip2 lz4 librocksdb-dev 
        # END Dependencies for RocksDB
        - run: set JAVA_HOME /usr/lib/jvm/java-17-openjdk-amd64/
        - run: export JAVA_HOME
        - run: dotnet sonarscanner begin /k:LGouellec_kafka-streams-dotnet /o:kafka-streams-dotnet /d:sonar.login=${SONAR_TOKEN} /d:sonar.host.url=https://sonarcloud.io /d:sonar.cs.opencover.reportsPaths="**\coverage*.opencover.xml" /d:sonar.coverage.exclusions="**sample*/*.cs,**test*/*.cs,**Tests*.cs,**Mock*.cs,**State/Cache/Internal/*.cs"
        - run: dotnet build
        - run: dotnet test --no-restore --no-build --verbosity normal -f net8.0 --collect:"XPlat Code Coverage" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover test/Streamiz.Kafka.Net.Tests/Streamiz.Kafka.Net.Tests.csproj
        - run: dotnet sonarscanner end /d:sonar.login=${SONAR_TOKEN}

  workflows:
    main:
      jobs:
        - build:
            context: SonarCloud
